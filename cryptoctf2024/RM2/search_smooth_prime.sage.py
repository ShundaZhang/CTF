

# This file was *autogenerated* from the file search_smooth_prime.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1024 = Integer(1024); _sage_const_120 = Integer(120); _sage_const_4 = Integer(4); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_80 = Integer(80); _sage_const_100 = Integer(100)#Smooth
#https://yu212.hatenablog.com/entry/2024/06/12/162155#RM2-64-solved

from Crypto.Util.number import *

print('search p = (3 * x^120 - 3) // 2 + 1.')

for x in range(_sage_const_2 **(_sage_const_1024 //_sage_const_120 ), _sage_const_2 **(_sage_const_1024 //_sage_const_120 )*_sage_const_4 ):
    p = (_sage_const_3  * x**_sage_const_120  - _sage_const_3 ) // _sage_const_2  + _sage_const_1 
    if p.nbits() == _sage_const_1024  and isPrime(int(p)):
        print(f'p = {p}')
        print(f'p - 1 = {p - _sage_const_1 }')
        print(f'2*p + 1 = {_sage_const_2  * p + _sage_const_1 }')
        print()

print('search p = (3 * x^80 - 3) // 2 + 1.')

for x in range(_sage_const_2 **(_sage_const_1024 //_sage_const_80 ), _sage_const_2 **(_sage_const_1024 //_sage_const_80 )*_sage_const_4 ):
    p = (_sage_const_3  * x**_sage_const_80  - _sage_const_3 ) // _sage_const_2  + _sage_const_1 
    if p.nbits() == _sage_const_1024  and isPrime(int(p)):
        print(f'p = {p}')
        print(f'p - 1 = {p - _sage_const_1 }')
        print(f'2*p + 1 = {_sage_const_2  * p + _sage_const_1 }')
        print()

print('search p = (3 * x^100 - 3) // 2 + 1.')

for x in range(_sage_const_2 **(_sage_const_1024 //_sage_const_100 ), _sage_const_2 **(_sage_const_1024 //_sage_const_100 )*_sage_const_4 ):
    p = (_sage_const_3  * x**_sage_const_100  - _sage_const_3 ) // _sage_const_2  + _sage_const_1 
    if p.nbits() == _sage_const_1024  and isPrime(int(p)):
        print(f'p = {p}')
        print(f'p - 1 = {p - _sage_const_1 }')
        print(f'2*p + 1 = {_sage_const_2  * p + _sage_const_1 }')
        print()

