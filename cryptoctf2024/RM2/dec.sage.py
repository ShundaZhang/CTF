

# This file was *autogenerated* from the file dec.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_65537 = Integer(65537); _sage_const_136319579751776446060762594173031311688966678940151526541501511333981751346927563082795749698154881610675192169672633902518187425468160661847068557813564166633080060747936338201910247175316115399953152558661099756476138183615339201940322678359899950385796675849521347379659664940470524326676056070490217094401 = Integer(136319579751776446060762594173031311688966678940151526541501511333981751346927563082795749698154881610675192169672633902518187425468160661847068557813564166633080060747936338201910247175316115399953152558661099756476138183615339201940322678359899950385796675849521347379659664940470524326676056070490217094401); _sage_const_165674320538257119618935777569264633493104025830012248611472894731246968925696662635145647004418760425271620056052110213831898075813625940406354655699229763954183325349451697961823730258851477789232732720256524106366149483534442882933118436805397696618238112020186478083571097834483155523153453888627684702401 = Integer(165674320538257119618935777569264633493104025830012248611472894731246968925696662635145647004418760425271620056052110213831898075813625940406354655699229763954183325349451697961823730258851477789232732720256524106366149483534442882933118436805397696618238112020186478083571097834483155523153453888627684702401); _sage_const_136319579751776446060762594173031311688966678940151526541501511333981751346927563082795749698154881610675192169672633902518187425468160661847068557813564166633080060747936338201910247175316115399953152558661099756476138183615339201940322678359899950385796675849521347379659664940470524326676056070490217094400 = Integer(136319579751776446060762594173031311688966678940151526541501511333981751346927563082795749698154881610675192169672633902518187425468160661847068557813564166633080060747936338201910247175316115399953152558661099756476138183615339201940322678359899950385796675849521347379659664940470524326676056070490217094400); _sage_const_2 = Integer(2); _sage_const_8 = Integer(8); _sage_const_3 = Integer(3); _sage_const_5 = Integer(5); _sage_const_7 = Integer(7); _sage_const_11 = Integer(11); _sage_const_13 = Integer(13); _sage_const_17 = Integer(17); _sage_const_41 = Integer(41); _sage_const_73 = Integer(73); _sage_const_101 = Integer(101); _sage_const_113 = Integer(113); _sage_const_401 = Integer(401); _sage_const_1321 = Integer(1321); _sage_const_4481 = Integer(4481); _sage_const_12401 = Integer(12401); _sage_const_36913 = Integer(36913); _sage_const_46861 = Integer(46861); _sage_const_54497 = Integer(54497); _sage_const_204311 = Integer(204311); _sage_const_261071 = Integer(261071); _sage_const_8652401 = Integer(8652401); _sage_const_24999521 = Integer(24999521); _sage_const_1357901521 = Integer(1357901521); _sage_const_3961916417 = Integer(3961916417); _sage_const_29040743441 = Integer(29040743441); _sage_const_41589844801 = Integer(41589844801); _sage_const_17122630828217 = Integer(17122630828217); _sage_const_45459230802631 = Integer(45459230802631); _sage_const_4602336982581694499761 = Integer(4602336982581694499761); _sage_const_25659752338627001628771761 = Integer(25659752338627001628771761); _sage_const_59522626340600884948348798081 = Integer(59522626340600884948348798081); _sage_const_133240651584560734013410462245281 = Integer(133240651584560734013410462245281); _sage_const_214523217697063175741941761486481 = Integer(214523217697063175741941761486481); _sage_const_375423311348937549351028930453201 = Integer(375423311348937549351028930453201); _sage_const_165674320538257119618935777569264633493104025830012248611472894731246968925696662635145647004418760425271620056052110213831898075813625940406354655699229763954183325349451697961823730258851477789232732720256524106366149483534442882933118436805397696618238112020186478083571097834483155523153453888627684702400 = Integer(165674320538257119618935777569264633493104025830012248611472894731246968925696662635145647004418760425271620056052110213831898075813625940406354655699229763954183325349451697961823730258851477789232732720256524106366149483534442882933118436805397696618238112020186478083571097834483155523153453888627684702400); _sage_const_6 = Integer(6); _sage_const_19 = Integer(19); _sage_const_23 = Integer(23); _sage_const_31 = Integer(31); _sage_const_37 = Integer(37); _sage_const_61 = Integer(61); _sage_const_71 = Integer(71); _sage_const_181 = Integer(181); _sage_const_229 = Integer(229); _sage_const_233 = Integer(233); _sage_const_241 = Integer(241); _sage_const_433 = Integer(433); _sage_const_1021 = Integer(1021); _sage_const_1033 = Integer(1033); _sage_const_5237 = Integer(5237); _sage_const_15601 = Integer(15601); _sage_const_15881 = Integer(15881); _sage_const_77621 = Integer(77621); _sage_const_101701 = Integer(101701); _sage_const_136531 = Integer(136531); _sage_const_600241 = Integer(600241); _sage_const_675889 = Integer(675889); _sage_const_39785017 = Integer(39785017); _sage_const_18590197861 = Integer(18590197861); _sage_const_2110175168929 = Integer(2110175168929); _sage_const_62270035466201 = Integer(62270035466201); _sage_const_708791106674191 = Integer(708791106674191); _sage_const_3388917958905421 = Integer(3388917958905421); _sage_const_297934315348629678161 = Integer(297934315348629678161); _sage_const_343722324162224502721 = Integer(343722324162224502721); _sage_const_4258346124311062016361408601 = Integer(4258346124311062016361408601); _sage_const_196833670484920623077625618471272401 = Integer(196833670484920623077625618471272401); _sage_const_3277953273564812642861575873943801232248811019050895081 = Integer(3277953273564812642861575873943801232248811019050895081); _sage_const_272639159503552892121525188346062623377933357880303053083003022667963502693855126165591499396309763221350384339345267805036374850936321323694137115627128333266160121495872676403820494350632230799906305117322199512952276367230678403880645356719799900771593351699042694759319329880941048653352112140980434188803 = Integer(272639159503552892121525188346062623377933357880303053083003022667963502693855126165591499396309763221350384339345267805036374850936321323694137115627128333266160121495872676403820494350632230799906305117322199512952276367230678403880645356719799900771593351699042694759319329880941048653352112140980434188803); _sage_const_81 = Integer(81); _sage_const_2357 = Integer(2357); _sage_const_80 = Integer(80); _sage_const_331348641076514239237871555138529266986208051660024497222945789462493937851393325270291294008837520850543240112104220427663796151627251880812709311398459527908366650698903395923647460517702955578465465440513048212732298967068885765866236873610795393236476224040372956167142195668966311046306907777255369404803 = Integer(331348641076514239237871555138529266986208051660024497222945789462493937851393325270291294008837520850543240112104220427663796151627251880812709311398459527908366650698903395923647460517702955578465465440513048212732298967068885765866236873610795393236476224040372956167142195668966311046306907777255369404803); _sage_const_120 = Integer(120); _sage_const_13371 = Integer(13371)
from pwn import *
import gmpy2
from Crypto.Util.number import *


'''
p = 165674320538257119618935777569264633493104025830012248611472894731246968925696662635145647004418760425271620056052110213831898075813625940406354655699229763954183325349451697961823730258851477789232732720256524106366149483534442882933118436805397696618238112020186478083571097834483155523153453888627684702401
p - 1 = 165674320538257119618935777569264633493104025830012248611472894731246968925696662635145647004418760425271620056052110213831898075813625940406354655699229763954183325349451697961823730258851477789232732720256524106366149483534442882933118436805397696618238112020186478083571097834483155523153453888627684702400
2*p + 1 = 331348641076514239237871555138529266986208051660024497222945789462493937851393325270291294008837520850543240112104220427663796151627251880812709311398459527908366650698903395923647460517702955578465465440513048212732298967068885765866236873610795393236476224040372956167142195668966311046306907777255369404803

p = 136319579751776446060762594173031311688966678940151526541501511333981751346927563082795749698154881610675192169672633902518187425468160661847068557813564166633080060747936338201910247175316115399953152558661099756476138183615339201940322678359899950385796675849521347379659664940470524326676056070490217094401
p - 1 = 136319579751776446060762594173031311688966678940151526541501511333981751346927563082795749698154881610675192169672633902518187425468160661847068557813564166633080060747936338201910247175316115399953152558661099756476138183615339201940322678359899950385796675849521347379659664940470524326676056070490217094400
2*p + 1 = 272639159503552892121525188346062623377933357880303053083003022667963502693855126165591499396309763221350384339345267805036374850936321323694137115627128333266160121495872676403820494350632230799906305117322199512952276367230678403880645356719799900771593351699042694759319329880941048653352112140980434188803

p = 167066497257440978316437383703759885883710399607464970507226666751148377601072192345678453127627017444715112573328815034091855768788191234070292236897489706711377800313782282510955348742479435017595806273698822210344965739577521983849135148941908318872721987147689750637963733990395783258274263553418422083201
p - 1 = 167066497257440978316437383703759885883710399607464970507226666751148377601072192345678453127627017444715112573328815034091855768788191234070292236897489706711377800313782282510955348742479435017595806273698822210344965739577521983849135148941908318872721987147689750637963733990395783258274263553418422083200
2*p + 1 = 334132994514881956632874767407519771767420799214929941014453333502296755202144384691356906255254034889430225146657630068183711537576382468140584473794979413422755600627564565021910697484958870035191612547397644420689931479155043967698270297883816637745443974295379501275927467980791566516548527106836844166403

'''

def phif(pr):
    mp = defaultdict(lambda: _sage_const_0 )
    for pp in pr:
        mp[pp] += _sage_const_1 
    ph = _sage_const_1 
    for k, v in mp.items():
        ph *= (k - _sage_const_1 ) * k ** (v - _sage_const_1 )
    return ph


e = _sage_const_65537 

p = _sage_const_136319579751776446060762594173031311688966678940151526541501511333981751346927563082795749698154881610675192169672633902518187425468160661847068557813564166633080060747936338201910247175316115399953152558661099756476138183615339201940322678359899950385796675849521347379659664940470524326676056070490217094401 

q = _sage_const_165674320538257119618935777569264633493104025830012248611472894731246968925696662635145647004418760425271620056052110213831898075813625940406354655699229763954183325349451697961823730258851477789232732720256524106366149483534442882933118436805397696618238112020186478083571097834483155523153453888627684702401 

p1 = _sage_const_136319579751776446060762594173031311688966678940151526541501511333981751346927563082795749698154881610675192169672633902518187425468160661847068557813564166633080060747936338201910247175316115399953152558661099756476138183615339201940322678359899950385796675849521347379659664940470524326676056070490217094400 

#factordb

phi1 =  [_sage_const_2 ]*_sage_const_8  + [_sage_const_3 ] + [_sage_const_5 ]*_sage_const_2  + [_sage_const_7 ] + [_sage_const_11 ] + [_sage_const_13 ] + [_sage_const_17 ] + [_sage_const_41 ] + [_sage_const_73 ] + [_sage_const_101 ] + [_sage_const_113 ] + [_sage_const_401 ] + [_sage_const_1321 ] + [_sage_const_4481 ] + [_sage_const_12401 ] + [_sage_const_36913 ] + [_sage_const_46861 ] + [_sage_const_54497 ] + [_sage_const_204311 ] + [_sage_const_261071 ] + [_sage_const_8652401 ] + [_sage_const_24999521 ] + [_sage_const_1357901521 ] + [_sage_const_3961916417 ] + [_sage_const_29040743441 ] + [_sage_const_41589844801 ] + [_sage_const_17122630828217 ] + [_sage_const_45459230802631 ] + [_sage_const_4602336982581694499761 ] + [_sage_const_25659752338627001628771761 ] + [_sage_const_59522626340600884948348798081 ] + [_sage_const_133240651584560734013410462245281 ] + [_sage_const_214523217697063175741941761486481 ] + [_sage_const_375423311348937549351028930453201 ]

q1 = _sage_const_165674320538257119618935777569264633493104025830012248611472894731246968925696662635145647004418760425271620056052110213831898075813625940406354655699229763954183325349451697961823730258851477789232732720256524106366149483534442882933118436805397696618238112020186478083571097834483155523153453888627684702400 

phi2 = [_sage_const_2 ]*_sage_const_6  + [_sage_const_3 ] + [_sage_const_5 ]*_sage_const_2  + [_sage_const_7 ] + [_sage_const_11 ] + [_sage_const_13 ] + [_sage_const_19 ] + [_sage_const_23 ] + [_sage_const_31 ] + [_sage_const_37 ] + [_sage_const_61 ] + [_sage_const_71 ] + [_sage_const_181 ] + [_sage_const_229 ] + [_sage_const_233 ] + [_sage_const_241 ] + [_sage_const_401 ] + [_sage_const_433 ] + [_sage_const_1021 ] + [_sage_const_1033 ] + [_sage_const_5237 ] + [_sage_const_15601 ] + [_sage_const_15881 ] + [_sage_const_77621 ] + [_sage_const_101701 ] + [_sage_const_136531 ] + [_sage_const_600241 ] + [_sage_const_675889 ] + [_sage_const_39785017 ] + [_sage_const_18590197861 ] + [_sage_const_2110175168929 ] + [_sage_const_62270035466201 ] + [_sage_const_708791106674191 ] + [_sage_const_3388917958905421 ] + [_sage_const_297934315348629678161 ] + [_sage_const_343722324162224502721 ] + [_sage_const_4258346124311062016361408601 ] + [_sage_const_196833670484920623077625618471272401 ] + [_sage_const_3277953273564812642861575873943801232248811019050895081 ]

p2 = _sage_const_272639159503552892121525188346062623377933357880303053083003022667963502693855126165591499396309763221350384339345267805036374850936321323694137115627128333266160121495872676403820494350632230799906305117322199512952276367230678403880645356719799900771593351699042694759319329880941048653352112140980434188803 

phi3 = [_sage_const_3 ]*_sage_const_81  + [_sage_const_2357 ]*_sage_const_80 

q2 = _sage_const_331348641076514239237871555138529266986208051660024497222945789462493937851393325270291294008837520850543240112104220427663796151627251880812709311398459527908366650698903395923647460517702955578465465440513048212732298967068885765866236873610795393236476224040372956167142195668966311046306907777255369404803 

phi4 = [_sage_const_3 ]*_sage_const_241  + [_sage_const_41 ]*_sage_const_120 

phi_m1 = phi1+phi2
phi = phif(phi_m1)
d1 = gmpy2.invert(e, phi)
print(d1)

phi_m2 = phi3+phi4
phi = phif(phi_m2)
d2 = gmpy2.invert(e, phi)
print(d2)

ip, port = '00.cr.yp.toc.tf', _sage_const_13371 
io = remote(ip, port)

io.recvuntil('Please provide your desired 1024-bit prime numbers p, q:')
io.sendline(str(p)+','+str(q))
io.recvline()

c1 = int(io.recvline().decode().strip().split(' = ')[-_sage_const_1 ])
c2 = int(io.recvline().decode().strip().split(' = ')[-_sage_const_1 ])

print(gcd(c1, p1*q1), gcd(c2, p2*q2))

#print(c1)
#print(c2)

m1 = pow(c1, d1, p1*q1)
m2 = pow(c2, d2, p2*q2)

m = long_to_bytes(m1) + long_to_bytes(m2)
print(m)
io.recvuntil('Now, send us the secret string to get the flag:')
io.sendline(m)
print(io.recvall())

