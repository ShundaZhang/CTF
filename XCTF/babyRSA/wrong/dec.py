import gmpy2
from Crypto.Util.number import bytes_to_long
#run the test.sage first to dump n and e

n = 41547510450310971134643847375897443467639487855486897174677786407417282980827904083564171574743879560010239186763369973581540347051619745780356556193158448680466680921374310926376395309497425557284932490082044908359792426361000622284150000384559057351282785701594525183934525134401938139334624002214110256505582206194768417598906985953444293304397719145759535776407550603700784141186619127849932531361329865824877821696114711632504113266547712649088058383571534850811556249464117943059471127140416298293546683168035923164173089473059263256529061432116560925502592040863681860703780651696865183401806944523711671321225
e = 31337

#from factordb.com
#n=5*5*283*827*37663*188537672642002761289426370839627398531696487307547734508736447469362088716473159478168442810660544011383957793535756432641864577887808150822998192688618594604670481081263064751701304257299504849700591956205072801102997253968153535496772434034860330325081458213471716892928099080356962672074852252124062969630428673854325541331217626416295044201678389556160723397168049147329623730912663520513365649157245174385025848383579200791176314831480428435295815606333241827726931566766671099126847393702234984233455986066774412196555401627775740664863378640448921926198048250420314983566468967267896590536203072103

p1=5
p2=5
p3=283
p4=827
p5=37663
p6=188537672642002761289426370839627398531696487307547734508736447469362088716473159478168442810660544011383957793535756432641864577887808150822998192688618594604670481081263064751701304257299504849700591956205072801102997253968153535496772434034860330325081458213471716892928099080356962672074852252124062969630428673854325541331217626416295044201678389556160723397168049147329623730912663520513365649157245174385025848383579200791176314831480428435295815606333241827726931566766671099126847393702234984233455986066774412196555401627775740664863378640448921926198048250420314983566468967267896590536203072103

p=[p1-1,p2-1,p3-1,p4-1,p5-1,p6-1]

#for px in p:
# 	print gmpy2.gcd(e,px)

phi=(p1-1)*(p2-1)*(p3-1)*(p4-1)*(p5-1)*(p6-1)
d=gmpy2.invert(e,phi)
print d

with open('flag.enc','r') as f:
	ct=f.read()
c=bytes_to_long(ct)
m=pow(c,d,n)
print hex(m)[2:]
