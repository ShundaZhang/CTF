# coding=utf-8


# This file was *autogenerated* from the file dec.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_2049 = Integer(2049); _sage_const_256 = Integer(256); _sage_const_16 = Integer(16); _sage_const_0xbd93d50a7eb53686a6c017eb4e87b5cc4c834e7353b38bcf64be173279e9bbaa9097debe19eec56a4faa0cb1ec996a0ea3ea965e8421fcb89aa95221c9e2fbb949b52dd1064962e18040daf536e00f5e4c6e4799fb7f076bc3819dc48a022909069011cef8be14d025bc2cd3f683ef87ca5fd0f8caf71c902d978093dd98bc9c14cd0f3f0ffc4955a3a37f3a9c25c0d69ad6b9d5ff53ab5037ad6386ed51963e6c6e06dd0b03ff1e3a5b584e2237cdabfe77474c5d3f994e293d2a64bfff05c7601fa7b0decc0c74f1248025d0b9c7bd67882b7674f0fe98979325779f90d5d3c1fc945552f58a6836cadddda802e31d62a19859e23080464b8f69d1a78b1478 = Integer(0xbd93d50a7eb53686a6c017eb4e87b5cc4c834e7353b38bcf64be173279e9bbaa9097debe19eec56a4faa0cb1ec996a0ea3ea965e8421fcb89aa95221c9e2fbb949b52dd1064962e18040daf536e00f5e4c6e4799fb7f076bc3819dc48a022909069011cef8be14d025bc2cd3f683ef87ca5fd0f8caf71c902d978093dd98bc9c14cd0f3f0ffc4955a3a37f3a9c25c0d69ad6b9d5ff53ab5037ad6386ed51963e6c6e06dd0b03ff1e3a5b584e2237cdabfe77474c5d3f994e293d2a64bfff05c7601fa7b0decc0c74f1248025d0b9c7bd67882b7674f0fe98979325779f90d5d3c1fc945552f58a6836cadddda802e31d62a19859e23080464b8f69d1a78b1478); _sage_const_28371355076358206651880108899447906576372266284154280282347957145120170645734899523334978078067679493874344060469168599875633378810644150054152285167807343298071802254581411860744158353096011714907819564399402714709858337654437633205741705120012058022068404602368525225166892620782231104596296684392603977673442420869964883518757302131139464582403543008517510576759631853686083804876647805871645437996963908242523987920166730933950556409136138395339773872530985876082852299816804207673785130661047844641798164979597836577807048385040982943227701240014693785196556609759136982566512240594608088626862145862029373010104 = Integer(28371355076358206651880108899447906576372266284154280282347957145120170645734899523334978078067679493874344060469168599875633378810644150054152285167807343298071802254581411860744158353096011714907819564399402714709858337654437633205741705120012058022068404602368525225166892620782231104596296684392603977673442420869964883518757302131139464582403543008517510576759631853686083804876647805871645437996963908242523987920166730933950556409136138395339773872530985876082852299816804207673785130661047844641798164979597836577807048385040982943227701240014693785196556609759136982566512240594608088626862145862029373010104)#!/usr/bin/env sage

from pubkey import P, n, e

R = GF(_sage_const_2 **_sage_const_2049 , names=('a',)); (a,) = R._first_ngens(1)

def encrypt(m):
    global n
    assert len(m) <= _sage_const_256 
    m_int = Integer(m.encode('hex'), _sage_const_16 )
    m_poly = P(R.fetch_int(m_int))
    c_poly = pow(m_poly, e, n)
    c_int = R(c_poly).integer_representation()
    c = format(c_int, '0256x').decode('hex')
    return c

def decrypt(c,d):
    c_int = Integer(c,_sage_const_16 )
    c_poly = P(R.fetch_int(c_int))
    m_poly = pow(c_poly, d, n)
    m_int = R(m_poly).integer_representation()
    #m = format(m_int, '0256x').decode('hex')
    print(m_int)
  
#get c from readenc.py
c=_sage_const_0xbd93d50a7eb53686a6c017eb4e87b5cc4c834e7353b38bcf64be173279e9bbaa9097debe19eec56a4faa0cb1ec996a0ea3ea965e8421fcb89aa95221c9e2fbb949b52dd1064962e18040daf536e00f5e4c6e4799fb7f076bc3819dc48a022909069011cef8be14d025bc2cd3f683ef87ca5fd0f8caf71c902d978093dd98bc9c14cd0f3f0ffc4955a3a37f3a9c25c0d69ad6b9d5ff53ab5037ad6386ed51963e6c6e06dd0b03ff1e3a5b584e2237cdabfe77474c5d3f994e293d2a64bfff05c7601fa7b0decc0c74f1248025d0b9c7bd67882b7674f0fe98979325779f90d5d3c1fc945552f58a6836cadddda802e31d62a19859e23080464b8f69d1a78b1478 

#get d from getd.sage
d=_sage_const_28371355076358206651880108899447906576372266284154280282347957145120170645734899523334978078067679493874344060469168599875633378810644150054152285167807343298071802254581411860744158353096011714907819564399402714709858337654437633205741705120012058022068404602368525225166892620782231104596296684392603977673442420869964883518757302131139464582403543008517510576759631853686083804876647805871645437996963908242523987920166730933950556409136138395339773872530985876082852299816804207673785130661047844641798164979597836577807048385040982943227701240014693785196556609759136982566512240594608088626862145862029373010104 

if __name__ == '__main__':
    decrypt(c,d)

