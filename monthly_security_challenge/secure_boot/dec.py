import gmpy2

n1 = 0xbc4bf4c55d907e55eeb93080ef05188ba82c75ab94f1fa096cf2bdda00dda796db5f2c0109492ff4382afed0ebe16edba67f78487dc0a986f0a46d91144e88db395116c76fe975fce71b82bd4174f7c858f8c8e4d4490470b4d668365f4c4732fa61e6fee054e02e281dd477e2b597d4895173723f0e7ccee85d2d7d32e97d35

n2 = 0xb27cca807e1566cc04c9a33a1d30b491b4dd181ea7363ae0770f77491695b9a876596fa5f1dea6d3733b96681d11f0e487301dfb2c5a55519dd7922a9407e22dd60d3234b278099fc138e58b3066a7ac1ba5db693dfb648f3ff174c0984ddf46f27149a2b2906b5275beb418bb8dd17fb0087c6a3f27c6d537ef507ef521102b

nx = 0xbb1fb6574953871d86e044b978954ae578994ef0795cce0e24d553522e22ecb439cb4294cb4071cb9c24fbd3fe54efe40307cd0f5088ac37e4cb82ed404863495dfd4d4908504decdf98fdf47a8dc84a04e1c738f0146f8e46b497de12a6bb7c7662d6edc6014ae1faab37a9b73e186bf2764b73620b23177c323a8fd2939337

e = 0x10001

def gcd(a, b):   
    if a < b:
        a, b = b, a
    while b != 0:
        temp = a % b
        a = b
        b = temp
    return a


#print(gcd(n1,n2))
#print(gcd(n1,nx))
#print(gcd(n2,nx))

p = 10361514524805599452082096275560523046169408396562560587992460816350015490426806276342299445263490627159299546617192444885679036101603944312246033729220581

q = nx/p

#print q

q = 12681819257044016867810486016126704095770391669698172780769668528184659529764015382706444784472079398337328771804435704600110591479903519094598777017183467

phi = (p-1)*(q-1)

d = gmpy2.invert(e,phi)

print hex(d)

m = 0x123

c = pow(m, e, nx)

m2 = pow(c, d, nx)

print hex(m), hex(m2)
