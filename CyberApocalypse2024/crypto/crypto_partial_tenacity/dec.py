#No a complex solustion such as coopersmith or branch prune, just simple math and brute force...

#!/usr/bin/python3.10
#pip3 uninstall PyCrypto
#pip3 install -U PyCryptodome

import gmpy2
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP

ct = bytes.fromhex('7f33a035c6390508cee1d0277f4712bf01a01a46677233f16387fae072d07bdee4f535b0bd66efa4f2475dc8515696cbc4bc2280c20c93726212695d770b0a8295e2bacbd6b59487b329cc36a5516567b948fed368bf02c50a39e6549312dc6badfef84d4e30494e9ef0a47bd97305639c875b16306fcd91146d3d126c1ea476')
n = 118641897764566817417551054135914458085151243893181692085585606712347004549784923154978949512746946759125187896834583143236980760760749398862405478042140850200893707709475167551056980474794729592748211827841494511437980466936302569013868048998752111754493558258605042130232239629213049847684412075111663446003
#p = 151441473357136152985216980397525591305875094288738820699069271674022167902643
#q = 15624342005774166525024608067426557093567392652723175301615422384508274269305

'''
n: 118641897764566817417551054135914458085151243893181692085585606712347004549784923154978949512746946759125187896834583143236980760760749398862405478042140850200893707709475167551056980474794729592748211827841494511437980466936302569013868048998752111754493558258605042130232239629213049847684412075111663446003
p: 1?5?1?4?4?1?4?7?3?3?5?7?1?3?6?1?5?2?9?8?5?2?1?6?9?8?0?3?9?7?5?2?5?5?9?1?3?0?5?8?7?5?0?9?4?2?8?8?7?3?8?8?2?0?6?9?9?0?6?9?2?7?1?6?7?4?0?2?2?1?6?7?9?0?2?6?4?3
q: ?1?5?6?2?4?3?4?2?0?0?5?7?7?4?1?6?6?5?2?5?0?2?4?6?0?8?0?6?7?4?2?6?5?5?7?0?9?3?5?6?7?3?9?2?6?5?2?7?2?3?1?7?5?3?0?1?6?1?5?4?2?2?3?8?4?5?0?8?2?7?4?2?6?9?3?0?5?

for i in range(10):
	if (i*10 + 3)*51 % 100 == 3:
		print(i)
i == 5
'''
pb = list('1?5?1?4?4?1?4?7?3?3?5?7?1?3?6?1?5?2?9?8?5?2?1?6?9?8?0?3?9?7?5?2?5?5?9?1?3?0?5?8?7?5?0?9?4?2?8?8?7?3?8?8?2?0?6?9?9?0?6?9?2?7?1?6?7?4?0?2?2?1?6?7?9?0?2?6?4?3')

qb = list('?1?5?6?2?4?3?4?2?0?0?5?7?7?4?1?6?6?5?2?5?0?2?4?6?0?8?0?6?7?4?2?6?5?5?7?0?9?3?5?6?7?3?9?2?6?5?2?7?2?3?1?7?5?3?0?1?6?1?5?4?2?2?3?8?4?5?0?8?2?7?4?2?6?9?3?0?51')

p = 3
q = 1

for i in range(1,155):
	m = 10**i
	mn = 10**(i+1)
	if qb[154-i] == '?':
		p = int(pb[154-i])*m + p
		q0 = q
		for x in range(10):
			q = x*m + q0
			if p*q % mn == n % mn:
				print(p,q)
				break
	elif pb[154-i] == '?':
		q = int(qb[154-i])*m + q
		p0 = p
		for x in range(10):
			p = x*m + p0
			if p*q % mn == n % mn:
				print(p,q)
				break

print(p)
print(q)
print(n)
print(p*q)

phi = (p-1)*(q-1)
e = 65537
#d = gmpy2.invert(e, phi)
#u = gmpy2.invert(p, q)
d = pow(e,-1,phi)
u = pow(p,-1,q)

key = RSA.construct((n, e, d))
flag = PKCS1_OAEP.new(key).decrypt(ct)
print(flag)
#b'HTB{v3r1fy1ng_pr1m3s_m0dul0_p0w3rs_0f_10!}'
