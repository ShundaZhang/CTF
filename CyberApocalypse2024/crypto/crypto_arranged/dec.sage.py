'''
y^2 = x^3 + ax + b % p
'''


# This file was *autogenerated* from the file dec.sage
from sage.all_cmdline import *   # import sage library

_sage_const_926644437000604217447316655857202297402572559368538978912888106419470011487878351667380679323664062362524967242819810112524880301882054682462685841995367 = Integer(926644437000604217447316655857202297402572559368538978912888106419470011487878351667380679323664062362524967242819810112524880301882054682462685841995367); _sage_const_4856802955780604241403155772782614224057462426619061437325274365157616489963087648882578621484232159439344263863246191729458550632500259702851115715803253 = Integer(4856802955780604241403155772782614224057462426619061437325274365157616489963087648882578621484232159439344263863246191729458550632500259702851115715803253); _sage_const_6174416269259286934151093673164493189253884617479643341333149124572806980379124586263533252636111274525178176274923169261099721987218035121599399265706997 = Integer(6174416269259286934151093673164493189253884617479643341333149124572806980379124586263533252636111274525178176274923169261099721987218035121599399265706997); _sage_const_2456156841357590320251214761807569562271603953403894230401577941817844043774935363309919542532110972731996540328492565967313383895865130190496346350907696 = Integer(2456156841357590320251214761807569562271603953403894230401577941817844043774935363309919542532110972731996540328492565967313383895865130190496346350907696); _sage_const_4226762176873291628054959228555764767094892520498623417484902164747532571129516149589498324130156426781285021938363575037142149243496535991590582169062734 = Integer(4226762176873291628054959228555764767094892520498623417484902164747532571129516149589498324130156426781285021938363575037142149243496535991590582169062734); _sage_const_425803237362195796450773819823046131597391930883675502922975433050925120921590881749610863732987162129269250945941632435026800264517318677407220354869865 = Integer(425803237362195796450773819823046131597391930883675502922975433050925120921590881749610863732987162129269250945941632435026800264517318677407220354869865); _sage_const_726 = Integer(726); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_6811640204116707417092117962115673978365477767365408659433165386030330695774965849821512765233994033921595018695941912899856987893397852151975650548637533 = Integer(6811640204116707417092117962115673978365477767365408659433165386030330695774965849821512765233994033921595018695941912899856987893397852151975650548637533); _sage_const_42 = Integer(42); _sage_const_4 = Integer(4); _sage_const_8 = Integer(8); _sage_const_16 = Integer(16); _sage_const_32 = Integer(32)

x0, y0 = _sage_const_926644437000604217447316655857202297402572559368538978912888106419470011487878351667380679323664062362524967242819810112524880301882054682462685841995367 , _sage_const_4856802955780604241403155772782614224057462426619061437325274365157616489963087648882578621484232159439344263863246191729458550632500259702851115715803253 

x1, y1 = _sage_const_6174416269259286934151093673164493189253884617479643341333149124572806980379124586263533252636111274525178176274923169261099721987218035121599399265706997  , _sage_const_2456156841357590320251214761807569562271603953403894230401577941817844043774935363309919542532110972731996540328492565967313383895865130190496346350907696 

x2, y2 = _sage_const_4226762176873291628054959228555764767094892520498623417484902164747532571129516149589498324130156426781285021938363575037142149243496535991590582169062734  , _sage_const_425803237362195796450773819823046131597391930883675502922975433050925120921590881749610863732987162129269250945941632435026800264517318677407220354869865 

a = _sage_const_726 

d1 = y1**_sage_const_2  - y0**_sage_const_2  - (x1**_sage_const_3  - x0**_sage_const_3 ) - a*(x1-x0)
d2 = y2**_sage_const_2  - y0**_sage_const_2  - (x2**_sage_const_3  - x0**_sage_const_3 ) - a*(x2-x0)

#p = gcd(d1, d2)
#print(p)

p = _sage_const_6811640204116707417092117962115673978365477767365408659433165386030330695774965849821512765233994033921595018695941912899856987893397852151975650548637533 

#for b in range(1000000):
#	if (y0^2 - x0^3 - a*x0 - b)%p == 0:
#		print(b)
#		break

b = _sage_const_42 

F = GF(p)
E = EllipticCurve(F, [a, b])

G = (x0, y0)
A = (x1, y1)
B = (x2, y2)

G = E.point(G)
A = E.point(A)
B = E.point(B)

#ka = discrete_log(A, G, operation='+')
#print(a)
#kb = discrete_log(B, G, operation='+')
#print(a, b)
ka = _sage_const_4 
kb = _sage_const_8 

#C = G*ka*kb
#(926644437000604217447316655857202297402572559368538978912888106419470011487878351667380679323664062362524967242819810112524880301882054682462685841995367 : 1954837248336103175688962189333059754308015340746347222107891020872714205811878200938934143749761874482250754832695721170398437260897592449124534832834280 : 1)

secret = _sage_const_926644437000604217447316655857202297402572559368538978912888106419470011487878351667380679323664062362524967242819810112524880301882054682462685841995367 

from Crypto.Cipher import AES
from Crypto.Util.number import long_to_bytes
from hashlib import sha256

hash = sha256()
hash.update(long_to_bytes(secret))

key = hash.digest()[_sage_const_16 :_sage_const_32 ]
iv = b'u\x8fo\x9aK\xc5\x17\xa7>[\x18\xa3\xc5\x11\x9en'
cipher = AES.new(key, AES.MODE_CBC, iv)
ct = b'V\x1b\xc6&\x04Z\xb0c\xec\x1a\tn\xd9\xa6(\xc1\xe1\xc5I\xf5\x1c\xd3\xa7\xdd\xa0\x84j\x9bob\x9d"\xd8\xf7\x98?^\x9dA{\xde\x08\x8f\x84i\xbf\x1f\xab'

decrypted = cipher.decrypt(ct)
print(decrypted)

