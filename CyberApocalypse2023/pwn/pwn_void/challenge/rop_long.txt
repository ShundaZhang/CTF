0x00401007: in eax, dx; and [rax], eax; add [rax-0x7b], cl; shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x00401008: and [rax], eax; add [rax-0x7b], cl; shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x0040100a: add [rax-0x7b], cl; shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x0040100d: shl byte ptr [rdx+rax-1], 0xd0; add rsp, 8; ret;
0x00401010: call rax;
0x00401051: rol al, 0x11; add [rax-0x39], cl; shl dword ptr [rax+0x11], 0x40; add [rax-0x39], cl; mov dword ptr [rbx+0x11], 0x15ff0040; xchg [rcx], ah; add [rax], al; hlt; nop [rax+rax]; ret;
0x00401052: rcl byte ptr [rcx], 0x40; add [rax-0x39], cl; shl dword ptr [rax+0x11], 0x40; add [rax-0x39], cl; mov dword ptr [rbx+0x11], 0x15ff0040; xchg [rcx], ah; add [rax], al; hlt; nop [rax+rax]; ret;
0x00401055: add [rax-0x39], cl; shl dword ptr [rax+0x11], 0x40; add [rax-0x39], cl; mov dword ptr [rbx+0x11], 0x15ff0040; xchg [rcx], ah; add [rax], al; hlt; nop [rax+rax]; ret;
0x00401058: shl dword ptr [rax+0x11], 0x40; add [rax-0x39], cl; mov dword ptr [rbx+0x11], 0x15ff0040; xchg [rcx], ah; add [rax], al; hlt; nop [rax+rax]; ret;
0x0040105c: add [rax-0x39], cl; mov dword ptr [rbx+0x11], 0x15ff0040; xchg [rcx], ah; add [rax], al; hlt; nop [rax+rax]; ret;
0x0040105f: mov dword ptr [rbx+0x11], 0x15ff0040; xchg [rcx], ah; add [rax], al; hlt; nop [rax+rax]; ret;
0x00401062: add dil, dil; adc eax, 0x2186; hlt; nop [rax+rax]; ret;
0x00401063: add bh, bh; adc eax, 0x2186; hlt; nop [rax+rax]; ret;
0x00401065: adc eax, 0x2186; hlt; nop [rax+rax]; ret;
0x00401066: xchg [rcx], ah; add [rax], al; hlt; nop [rax+rax]; ret;
0x00401067: and [rax], eax; add ah, dh; nop [rax+rax]; ret;
0x00401068: add [rax], al; hlt; nop [rax+rax]; ret;
0x00401069: add ah, dh; nop [rax+rax]; ret;
0x0040106a: hlt; nop [rax+rax]; ret;
0x00401096: or [rdi+0x404030], edi; jmp rax;
0x0040109e: xchg ax, ax; ret;
0x0040109f: nop; ret;
0x004010d9: mov edi, 0x404030; jmp rax;
0x004010de: jmp rax;
0x00401101: inc esi; add eax, 0x2f27; add [rbp-0x3d], ebx; nop [rax+rax]; ret;
0x00401102: mov byte ptr [rip+0x2f27], 1; pop rbp; ret;
0x00401103: add eax, 0x2f27; add [rbp-0x3d], ebx; nop [rax+rax]; ret;
0x00401106: add [rax], al; add [rbp-0x3d], ebx; nop [rax+rax]; ret;
0x00401107: add [rcx], al; pop rbp; ret;
0x00401108: add [rbp-0x3d], ebx; nop [rax+rax]; ret;
0x00401109: pop rbp; ret;
0x0040110b: nop [rax+rax]; ret;
0x0040110d: add [rax], r8b; ret;
0x0040110e: add [rax], al; ret;
0x0040113f: call qword ptr [rax+0x4855c3c9];
0x00401140: nop; leave; ret;
0x00401157: mov eax, 0; leave; ret;
0x00401158: add [rax], al; add [rax], al; leave; ret;
0x00401159: add [rax], al; add cl, cl; ret;
0x0040115a: add [rax], al; leave; ret;
0x0040115b: add cl, cl; ret;
0x0040115c: leave; ret;
0x00401193: xor ebx, ebx; nop [rax]; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401195: nop [rax]; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401197: add [rcx+rcx*4-0xe], cl; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401198: mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x00401199: mov edx, esi; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040119b: mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040119c: mov esi, ebp; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040119d: out dx, al; mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040119e: mov edi, r12d; call qword ptr [r15+rbx*8];
0x0040119f: mov edi, esp; call qword ptr [r15+rbx*8];
0x004011a0: out 0x41, eax; call qword ptr [rdi+rbx*8];
0x004011a1: call qword ptr [r15+rbx*8];
0x004011a2: call qword ptr [rdi+rbx*8];
0x004011a4: fisttp word ptr [rax-0x7d], st; ret;
0x004011a8: add [rax+0x39], ecx; fnsave [rbp-0x16]; add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x004011ab: fnsave [rbp-0x16]; add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x004011ae: add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x004011af: add esp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x004011b1: or [rbx+0x5d], bl; pop r12; pop r13; pop r14; pop r15; ret;
0x004011b2: pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x004011b3: pop rbp; pop r12; pop r13; pop r14; pop r15; ret;
0x004011b4: pop r12; pop r13; pop r14; pop r15; ret;
0x004011b5: pop rsp; pop r13; pop r14; pop r15; ret;
0x004011b6: pop r13; pop r14; pop r15; ret;
0x004011b7: pop rbp; pop r14; pop r15; ret;
0x004011b8: pop r14; pop r15; ret;
0x004011b9: pop rsi; pop r15; ret;
0x004011ba: pop r15; ret;
0x004011bb: pop rdi; ret;
0x004011bd: nop [rax]; ret;
0x004011c2: add [rax], al; sub rsp, 8; add rsp, 8; ret;
0x004011c4: sub rsp, 8; add rsp, 8; ret;
0x004011c5: sub esp, 8; add rsp, 8; ret;
0x004011c8: add rsp, 8; ret;
0x004011c9: add esp, 8; ret;
0x004011cc: ret;
