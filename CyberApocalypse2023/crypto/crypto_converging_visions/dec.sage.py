

# This file was *autogenerated* from the file dec.sage
from sage.all_cmdline import *   # import sage library

_sage_const_30347 = Integer(30347); _sage_const_2 = Integer(2); _sage_const_256 = Integer(256); _sage_const_255 = Integer(255); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)#https://chovid99.github.io/posts/cyber-apocalypse-2023-crypto/#converging-visions
#https://github.com/jvdsn/crypto-attacks/blob/master/attacks/ecc/smart_attack.py

from pwn import *

ip, port = '68.183.37.122', _sage_const_30347 
io = remote(ip, port)

high = _sage_const_2 **_sage_const_256 
low = _sage_const_2 **_sage_const_255 

while high - low >= _sage_const_0 :
	print(f'high, low = {high, low}')
	print(f'diff = {high - low}')
	if high - low == _sage_const_0  :
		break
	mid = (high + low)//_sage_const_2 
	io.sendlineafter(b'> ', b'1')
	io.sendlineafter(b'x: ', str(mid).encode())
	out = io.recvline()
	if b'greater' in out:
		high = mid
	else:
		low = mid + _sage_const_1 
p = high

print(f'recovered p = {p}')

