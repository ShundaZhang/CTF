import gmpy2

n = 14783703403657671882600600446061886156235531325852194800287001788765221084107631153330658325830443132164971084137462046607458019775851952933254941568056899
e = 65537
c = 684151956678815994103733261966890872908254340972007896833477109225858676207046453897176861126186570268646592844185948487733725335274498844684380516667587

#print gmpy2.iroot(n,2)

r = 121588253559534573498320028934517990374721243335397811413129137253981502291629+1
#d = 1000000
d = 10
r1 = r-d
while r1 <= r:
	if gmpy2.is_prime(r1):
		#print r1
		if n%r1 == 0:
			#print 'Found!'
			print r1
			break
		else:
			r1=gmpy2.next_prime(r1)
	else:
		r1=gmpy2.next_prime(r1)

p1=r1
q1=n/p1

phi = (p1-1)*(q1-1)
d = gmpy2.invert(e,phi)
m = pow(c,d,n)
print hex(m)[2:].decode('hex')
