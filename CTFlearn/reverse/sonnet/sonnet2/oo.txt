0:    () -> O[4] < O[3] ? e(3, 0) : e(25),
1:    () -> O[20] = O[0],
2:    () -> {aa.clear();return 0;},
3:    () -> e(16, 9, O[O[1] - 1], 25, 5, 19) + (O[5] = (byte)(6 + O[4])),
4:    () -> O[81] += (O[5] - 103 == 0 ? 5 : 0),
5:    () -> O[6 + O[4]] = O[5],
6:    () -> O[O[1] - 1] ^= O[4],
7:    () -> e(25, 39, 24, 47, 9),
8:    () -> e(18, 22, 16, 50, 45, 36),
9:    () -> O[O[1]++] = O[5],
10:    () -> O[25]++,
11:    () -> O[25] / 3 - 1,
12:    () -> e(24, 25, 48, 9, 7),
13:    () -> e(37, 26, 35, 44, 27, 33, 18, 22, 16, 4),
14:    () -> O[25],
15:    () -> e(44, 27, 9, 0),
16:    () -> O[5] = O[O[5]],
17:    () -> O[4] == 0 ? e(41, 24, 28, 30, 23, 25, 20, 9) : e(25, 20, 9),
18:    () -> O[80],
19:    () -> O[4]++,
20:    () -> a.byteValue() - ((a = a.shiftRight(8)).equals(6) ? 6 : 37) + e(22),
21:    () -> O[5] -= O[2],
22:    () -> O[5] = O[0],
23:    () -> (a = a.modPow(b(107, 3), b(93, 14))).byteValue(),
24:    () -> O[2] = O[0],
25:    () -> O[5] = O[--O[1]],
26:    () -> 5,
27:    () -> O[4] = O[0],
28:    () -> O[2]--,
29:    () -> O[25] < O[3] ? e(46, 10, 29) : e(2),
30:    () -> (O[2] >= 0 ? e(22, 47, 16, 38, 28, 30) : e()) - 31,
31:    () -> 58 - (O[25] % 3 == 0 ? e(22, 11, 24, 47, 16, 15) : e()),
32:    () -> O[5] == 0 ? 0 : (O[81] = 1) - 1,
33:    () -> (O[4] < O[3] ? e(24, 43, 47, 16, 34, 19, 33) : e()) - 31,
34:    () -> e(24, 21, 32),
35:    () -> O[81] = O[0],
36:    () -> e(24, 46, 22, 48, 26, 24, 21, 18, 24, 47, 40) - 26,
37:    () -> O[25] < O[3] ? e(8, 10, 31, 37) : e(),
38:    () -> (a = a.shiftLeft(8).add(b(O[5] & 0xFF))).byteValue(),
39:    () -> 45,
40:    () -> O[80] = O[5],
41:    () -> O[3],
42:    () -> O[O[1]++] = O[0],
43:    () -> O[5] = O[4],
44:    () -> 0,
45:    () -> O[5] == 63 ? e(29) : e(39),
46:    () -> in.nextLine().length() % 2,
47:    () -> O[5] += O[2],
48:    () -> O[5] *= O[2],
49:    () -> e(O[5]),
50:    () -> O[O[25] + 6] -= (O[O[25] + 66] = O[5]) + O[80],
51:    
